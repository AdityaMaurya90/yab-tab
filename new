<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shriph YouTube (Piped)</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: Arial, sans-serif; padding: 10px; background: #f9f9f9; }
        #search-container { max-width: 600px; margin: 10px auto; display: flex; gap: 8px; padding: 10px; }
        #search-input { flex: 1; padding: 12px; font-size: 16px; border: 2px solid #ccc; border-radius: 24px; outline: none; }
        #search-button { padding: 12px 20px; font-size: 16px; border: none; border-radius: 24px; background-color: #007bff; color: white; cursor: pointer; }
        #search-button:hover { background-color: #0056b3; }
        #results-container { display: grid; grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); gap: 10px; padding: 10px; max-width: 100%; margin: 0 auto; }
        .video-item { cursor: pointer; transition: transform 0.2s; background: white; padding: 8px; border-radius: 8px; box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); }
        .video-item:hover { transform: scale(1.03); }
        .thumbnail { width: 100%; border-radius: 8px; aspect-ratio: 16 / 9; }
        #player-container { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: black; display: none; justify-content: center; align-items: center; }
        #player { width: 100%; max-height: 90vh; aspect-ratio: 16 / 9; }
        #back-button { position: absolute; top: 10px; left: 10px; background: rgba(255, 255, 255, 0.8); border: none; padding: 10px; border-radius: 50%; cursor: pointer; font-size: 16px; box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); z-index: 1000; }
    </style>
</head>
<body>
    <div id="search-container">
        <input type="text" id="search-input" placeholder="Search..." autocomplete="off">
        <button id="search-button">Search</button>
    </div>
    <div id="results-container"></div>
    <div id="player-container">
        <video id="player" controls></video>
        <button id="back-button">‚Üê</button>
    </div>

    <script>
        document.getElementById('search-button').addEventListener('click', performSearch);
        document.getElementById('search-input').addEventListener('keypress', (e) => {
            if (e.key === 'Enter') { performSearch(); }
        });

        async function performSearch() {
            const query = document.getElementById('search-input').value.trim();
            if (!query) { alert("Please enter a search term."); return; }

            const url = `https://pipedapi.kavin.rocks/search?q=${encodeURIComponent(query)}`;
            try {
                const response = await fetch(url);
                const data = await response.json();

                if (data.items.length > 0) {
                    displayResults(data.items);
                } else {
                    alert("No results found.");
                }
            } catch (error) {
                console.error("Error fetching data:", error);
                alert("An error occurred while fetching data.");
            }
        }

        function displayResults(videos) {
            const container = document.getElementById('results-container');
            container.innerHTML = '';

            videos.forEach(video => {
                if (video.type === "video") {
                    const videoElement = document.createElement('div');
                    videoElement.className = 'video-item';
                    videoElement.innerHTML = `
                        <img src="${video.thumbnail}" class="thumbnail">
                        <h3>${video.title}</h3>
                        <p>${video.uploader}</p>
                    `;
                    videoElement.addEventListener('click', () => playVideo(video.url));
                    container.appendChild(videoElement);
                }
            });
        }

        async function playVideo(videoUrl) {
            try {
                const videoId = videoUrl.split("/").pop();
                const streamUrl = `https://pipedapi.kavin.rocks/streams/${videoId}`;
                
                const response = await fetch(streamUrl);
                const data = await response.json();

                if (data.videoStreams.length > 0) {
                    const bestStream = data.videoStreams[0].url;
                    document.getElementById('player').src = bestStream;
                    document.getElementById('player-container').style.display = 'flex';
                } else {
                    alert("No playable stream found.");
                }
            } catch (error) {
                console.error("Error fetching stream:", error);
                alert("An error occurred while fetching the video stream.");
            }
        }

        document.getElementById('back-button').addEventListener('click', closePlayer);

        function closePlayer() {
            document.getElementById('player-container').style.display = 'none';
            document.getElementById('player').src = '';
        }
    </script>
</body>
</html>
